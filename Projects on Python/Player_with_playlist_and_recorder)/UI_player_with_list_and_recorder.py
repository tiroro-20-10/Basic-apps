# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'player_3.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtMultimedia, QtMultimediaWidgets

bbb = False
recorder = False

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(514, 427)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./FW.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(Form)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.splitter = QtWidgets.QSplitter(Form)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.widget = QtWidgets.QWidget(self.splitter)
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.openButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openButton.sizePolicy().hasHeightForWidth())
        self.openButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.openButton.setFont(font)
        self.openButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("./MSONSEXT.DLL_14_3-3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.openButton.setIcon(icon1)
        self.openButton.setIconSize(QtCore.QSize(25, 25))
        self.openButton.setObjectName("openButton")
        self.verticalLayout_2.addWidget(self.openButton)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.recordingButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.recordingButton.sizePolicy().hasHeightForWidth())
        self.recordingButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.recordingButton.setFont(font)
        self.recordingButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.recordingButton.setIcon(icon1)
        self.recordingButton.setIconSize(QtCore.QSize(25, 25))
        self.recordingButton.setObjectName("recordingButton")
        self.verticalLayout_2.addWidget(self.recordingButton)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")

        self.videoWidget = QtMultimediaWidgets.QVideoWidget(Form)
        self.videoWidget.setObjectName("videoWidget")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.videoWidget.sizePolicy().hasHeightForWidth())
        self.videoWidget.setSizePolicy(sizePolicy)
        self.verticalLayout.addWidget(self.videoWidget)

        self.spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout.addItem(self.spacerItem)
        self.image_no_label = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.image_no_label.sizePolicy().hasHeightForWidth())
        self.image_no_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.image_no_label.setFont(font)
        self.image_no_label.setText("")
        self.image_no_label.setPixmap(QtGui.QPixmap("./msmsgs.exe_14_4-6.png"))
        self.image_no_label.setAlignment(QtCore.Qt.AlignCenter)
        self.image_no_label.setObjectName("image_no_label")
        self.verticalLayout.addWidget(self.image_no_label)
        self.image_yes_label = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.image_yes_label.sizePolicy().hasHeightForWidth())
        self.image_yes_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.image_yes_label.setFont(font)
        self.image_yes_label.setText("")
        self.image_yes_label.setPixmap(QtGui.QPixmap("./msmsgs.exe_14_3-0.png"))
        self.image_yes_label.setAlignment(QtCore.Qt.AlignCenter)
        self.image_yes_label.setObjectName("image_yes_label")
        self.verticalLayout.addWidget(self.image_yes_label)
        self.filename_label = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.filename_label.sizePolicy().hasHeightForWidth())
        self.filename_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.filename_label.setFont(font)
        self.filename_label.setAlignment(QtCore.Qt.AlignCenter)
        self.filename_label.setWordWrap(True)
        self.filename_label.setObjectName("filename_label")
        self.verticalLayout.addWidget(self.filename_label)
        self.not_secretButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.not_secretButton.sizePolicy().hasHeightForWidth())
        self.not_secretButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        self.not_secretButton.setFont(font)
        self.not_secretButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.not_secretButton.setText("")
        self.not_secretButton.setDefault(False)
        self.not_secretButton.setFlat(True)
        self.not_secretButton.setObjectName("not_secretButton")
        self.verticalLayout.addWidget(self.not_secretButton)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.showSlider = QtWidgets.QSlider(self.widget)
        self.showSlider.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.showSlider.setOrientation(QtCore.Qt.Horizontal)
        self.showSlider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.showSlider.setObjectName("showSlider")
        self.verticalLayout_2.addWidget(self.showSlider)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.leftButton = QtWidgets.QToolButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftButton.sizePolicy().hasHeightForWidth())
        self.leftButton.setSizePolicy(sizePolicy)
        self.leftButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("./left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.leftButton.setIcon(icon2)
        self.leftButton.setIconSize(QtCore.QSize(19, 21))
        self.leftButton.setArrowType(QtCore.Qt.NoArrow)
        self.leftButton.setObjectName("leftButton")
        self.horizontalLayout.addWidget(self.leftButton)
        self.playButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.playButton.sizePolicy().hasHeightForWidth())
        self.playButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.playButton.setFont(font)
        self.playButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("./play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.playButton.setIcon(icon3)
        self.playButton.setObjectName("playButton")
        self.horizontalLayout.addWidget(self.playButton)
        self.pauseButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pauseButton.sizePolicy().hasHeightForWidth())
        self.pauseButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.pauseButton.setFont(font)
        self.pauseButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("./pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pauseButton.setIcon(icon4)
        self.pauseButton.setObjectName("pauseButton")
        self.horizontalLayout.addWidget(self.pauseButton)
        self.stopButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stopButton.sizePolicy().hasHeightForWidth())
        self.stopButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.stopButton.setFont(font)
        self.stopButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("./stop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.stopButton.setIcon(icon5)
        self.stopButton.setObjectName("stopButton")
        self.horizontalLayout.addWidget(self.stopButton)
        self.rightButton = QtWidgets.QToolButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightButton.sizePolicy().hasHeightForWidth())
        self.rightButton.setSizePolicy(sizePolicy)
        self.rightButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("./right.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.rightButton.setIcon(icon6)
        self.rightButton.setIconSize(QtCore.QSize(19, 21))
        self.rightButton.setArrowType(QtCore.Qt.NoArrow)
        self.rightButton.setObjectName("rightButton")
        self.horizontalLayout.addWidget(self.rightButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.volume_label = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.volume_label.setFont(font)
        self.volume_label.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.volume_label.setObjectName("volume_label")
        self.horizontalLayout_2.addWidget(self.volume_label)
        self.volumeSlider = QtWidgets.QSlider(self.widget)
        self.volumeSlider.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.volumeSlider.setMaximum(100)
        self.volumeSlider.setOrientation(QtCore.Qt.Horizontal)
        self.volumeSlider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.volumeSlider.setObjectName("volumeSlider")
        self.horizontalLayout_2.addWidget(self.volumeSlider)
        self.muteButton = QtWidgets.QPushButton(self.widget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.muteButton.setFont(font)
        self.muteButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.muteButton.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.muteButton.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("./conf.exe_14_148.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon7.addPixmap(QtGui.QPixmap("./conf.exe_14_111.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.muteButton.setIcon(icon7)
        self.muteButton.setIconSize(QtCore.QSize(25, 25))
        self.muteButton.setCheckable(True)
        self.muteButton.setObjectName("muteButton")
        self.horizontalLayout_2.addWidget(self.muteButton)
        self.videoButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.videoButton.sizePolicy().hasHeightForWidth())
        self.videoButton.setSizePolicy(sizePolicy)
        self.videoButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.videoButton.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("./moviemk.exe_14_128-5.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.videoButton.setIcon(icon8)
        self.videoButton.setIconSize(QtCore.QSize(25, 25))
        self.videoButton.setObjectName("videoButton")
        self.horizontalLayout_2.addWidget(self.videoButton)
        self.audioButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.audioButton.sizePolicy().hasHeightForWidth())
        self.audioButton.setSizePolicy(sizePolicy)
        self.audioButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.audioButton.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("./setup_wm.exe_14_70-2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.audioButton.setIcon(icon9)
        self.audioButton.setIconSize(QtCore.QSize(25, 25))
        self.audioButton.setObjectName("audioButton")
        self.horizontalLayout_2.addWidget(self.audioButton)
        self.listButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listButton.sizePolicy().hasHeightForWidth())
        self.listButton.setSizePolicy(sizePolicy)
        self.listButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.listButton.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("./list.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.listButton.setIcon(icon10)
        self.listButton.setIconSize(QtCore.QSize(25, 25))
        self.listButton.setObjectName("listButton")
        self.horizontalLayout_2.addWidget(self.listButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.listWidget = QtWidgets.QListWidget(self.splitter)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.listWidget.setFont(font)
        self.listWidget.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.listWidget.setObjectName("listWidget")
        self.horizontalLayout_3.addWidget(self.splitter)

        self.audio_player = True

        self.videoWidget.hide()
        self.image_yes_label.hide()
        self.pauseButton.hide()
        self.audioButton.hide()

        self.ar = QtMultimedia.QAudioRecorder(Form)
        self.ar.stateChanged.connect(self.ar_on_state_change)
        self.ar.volumeChanged.connect(lambda v: self.volumeSlider.setValue(int(v * 100)))
        self.ar.setVolume(0.5)

        settings = QtMultimedia.QAudioEncoderSettings()
        settings.setCodec("audio/wav")
        settings.setQuality(QtMultimedia.QMultimedia.HighQuality)
        self.ar.setAudioSettings(settings)

        self.recordingButton.clicked.connect(self.audio_recorder)
        self.muteButton.clicked.connect(self.ar.setMuted)

        self.mp = QtMultimedia.QMediaPlayer(Form)
        self.mp.mediaStatusChanged.connect(self.mp_on_status_change)
        self.mp.stateChanged.connect(self.mp_on_state_change)
        self.mp.positionChanged.connect(self.showSlider.setValue)
        self.mp.volumeChanged.connect(self.volumeSlider.setValue)
        self.mp.setVolume(50)

        self.playlist = QtMultimedia.QMediaPlaylist(self.mp)

        self.videoWidget.setAspectRatioMode(QtCore.Qt.KeepAspectRatio)
        self.mp.setVideoOutput(self.videoWidget)

        self.playButton.setEnabled(False)
        self.pauseButton.setEnabled(False)
        self.stopButton.setEnabled(False)
        self.leftButton.setEnabled(False)
        self.rightButton.setEnabled(False)
        self.showSlider.setEnabled(False)

        self.muteButton.clicked.connect(self.mp.setMuted)
        self.openButton.clicked.connect(self.open_file)
        self.playButton.clicked.connect(self.play_record)
        self.pauseButton.clicked.connect(self.pause_pause)
        self.stopButton.clicked.connect(self.stop_stop)

        self.volumeSlider.valueChanged.connect(self.volumeSlider_valueChanged)
        self.mp_set_position = self.mp.setPosition

        self.videoButton.clicked.connect(self.videoplayer)
        self.audioButton.clicked.connect(self.audioplayer)
        self.showSlider.valueChanged.connect(self.mp_set_position)

        self.rightButton.clicked.connect(self.playlist.next)
        self.leftButton.clicked.connect(self.playlist.previous)
        self.rightButton.clicked.connect(lambda: self.filename_label.setText(self.playlist.currentMedia().canonicalUrl().fileName()[:59] + "..."))
        self.leftButton.clicked.connect(lambda: self.filename_label.setText(self.playlist.currentMedia().canonicalUrl().fileName()[:59] + "..."))

        self.listButton.clicked.connect(self.listplay)
        self.listWidget.doubleClicked.connect(lambda ci: self.playlist.setCurrentIndex(ci.row()))

        self.retranslateUi(Form)
        self.stopButton.clicked.connect(self.pauseButton.hide)  # type: ignore
        self.stopButton.clicked.connect(self.playButton.show)  # type: ignore
        self.videoButton.clicked.connect(self.videoWidget.show)  # type: ignore
        self.videoButton.clicked.connect(self.videoButton.hide)  # type: ignore
        self.videoButton.clicked.connect(self.audioButton.show)  # type: ignore
        self.audioButton.clicked.connect(self.audioButton.hide)  # type: ignore
        self.audioButton.clicked.connect(self.videoButton.show)  # type: ignore
        self.videoButton.clicked.connect(self.stopButton.click)  # type: ignore
        self.audioButton.clicked.connect(self.stopButton.click)  # type: ignore
        self.playButton.clicked.connect(self.playButton.hide)  # type: ignore
        self.playButton.clicked.connect(self.pauseButton.show)  # type: ignore
        self.pauseButton.clicked.connect(self.pauseButton.hide)  # type: ignore
        self.pauseButton.clicked.connect(self.playButton.show)  # type: ignore
        self.videoButton.clicked.connect(self.filename_label.hide)  # type: ignore
        self.muteButton.toggled['bool'].connect(self.volumeSlider.setDisabled)  # type: ignore
        self.videoButton.clicked.connect(self.image_yes_label.hide)  # type: ignore
        self.videoButton.clicked.connect(self.image_no_label.hide)  # type: ignore
        self.audioButton.clicked.connect(self.image_no_label.show)  # type: ignore
        self.audioButton.clicked.connect(self.filename_label.show)  # type: ignore
        self.audioButton.clicked.connect(self.videoWidget.hide)  # type: ignore
        self.openButton.clicked.connect(self.showSlider.show)  # type: ignore
        self.recordingButton.clicked.connect(self.showSlider.hide)  # type: ignore
        self.not_secretButton.clicked.connect(self.b)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Form)

    def stop_stop(self):
        global recorder
        if not recorder:
            self.mp.stop()
        if recorder:
            self.ar.stop()

    def pause_pause(self):
        global recorder
        if not recorder:
            self.mp.pause()
        if recorder:
            self.ar.pause()

    def play_record(self):
        global recorder
        if not recorder:
            self.mp.play()
        if recorder:
            self.ar.record()

    def volumeSlider_valueChanged(self):
        v = self.volumeSlider.value()
        self.mp.setVolume(v)
        self.ar.setVolume(v / 100)

    def ar_on_state_change(self, state):
        if state == QtMultimedia.QMediaRecorder.StoppedState:
            self.pauseButton.hide()
            self.playButton.show()
            self.playButton.setEnabled(True)
            self.pauseButton.setEnabled(False)
            self.stopButton.setEnabled(False)
        elif state == QtMultimedia.QMediaRecorder.RecordingState:
            self.playButton.setEnabled(False)
            self.pauseButton.setEnabled(True)
            self.stopButton.setEnabled(True)
        elif state == QtMultimedia.QMediaRecorder.PausedState:
            self.playButton.setEnabled(True)
            self.pauseButton.setEnabled(False)
            self.stopButton.setEnabled(True)


    def audio_recorder(self):
        global recorder
        recorder = True
        self.playlist.clear()
        self.listWidget.clear()
        self.playButton.setText("Record")
        file = QtWidgets.QFileDialog.getSaveFileUrl(Form, "Select recording file...",
                                                    filter="WAVE PCM (*.wav);;MP3 (*.mp3);;All files (*.*)")
        self.filename_label.setText("Recording...")
        if self.ar.setOutputLocation(file[0]):
            self.playButton.setEnabled(True)
            self.pauseButton.setEnabled(False)
            self.stopButton.setEnabled(False)
        else:
            self.playButton.setEnabled(False)
            self.filename_label.setText(" ")
            QtWidgets.QMessageBox.warning(Form, "Audio recorder",
                                          "Output location was not set")

    def listplay(self):
        if self.listWidget.isHidden():
            self.listWidget.show()
        elif not self.listWidget.isHidden():
            self.listWidget.hide()

    def open_file(self):
        global recorder
        if recorder:
            self.ar.stop()
        recorder = False
        self.playButton.setText("Play")
        if self.audio_player:
            files = QtWidgets.QFileDialog.getOpenFileUrls(Form, "Open audio file...",
                                                          filter="WAVE PCM (*.wav);;MP3 (*.mp3);;All files (*.*)")
        elif not self.audio_player:
            files = QtWidgets.QFileDialog.getOpenFileUrls(Form, "Open video file...",
                                                          filter="MPEG LAYER 4 (*.mp4);;AVI (*.avi);;All files (*.*)")
        self.filename_label.setText("Filename")
        self.playlist.clear()
        self.listWidget.clear()
        for file in files[0]:
            self.playlist.addMedia(QtMultimedia.QMediaContent(file))
            self.listWidget.addItem(file.fileName())
        self.mp.setMedia(QtMultimedia.QMediaContent(self.playlist))

    def mp_on_status_change(self, status):
        global recorder
        if not recorder:
            if status == QtMultimedia.QMediaPlayer.LoadedMedia:
                self.filename_label.setText(self.playlist.currentMedia().canonicalUrl().fileName()[:59] + "...")
                self.pauseButton.hide()
                self.playButton.show()
                self.playButton.setEnabled(True)
                self.pauseButton.setEnabled(False)
                self.stopButton.setEnabled(False)
                if self.playlist.mediaCount() != 1:
                    self.leftButton.setEnabled(True)
                    self.rightButton.setEnabled(True)
                self.showSlider.setEnabled(True)
                self.showSlider.setMaximum(self.mp.duration())
            elif status == QtMultimedia.QMediaPlayer.EndOfMedia:
                self.filename_label.setText(self.playlist.currentMedia().canonicalUrl().fileName()[:59] + "...")
                self.showSlider.blockSignals(False)
                self.mp.stop()
                self.pauseButton.hide()
                self.playButton.show()
                self.showSlider.setValue(0)
                self.playButton.setEnabled(True)
                self.pauseButton.setEnabled(True)
                self.stopButton.setEnabled(False)
                self.showSlider.setEnabled(True)
                self.playlist.next()
            elif status == QtMultimedia.QMediaPlayer.InvalidMedia:
                QtWidgets.QMessageBox.critical(Form, "InValID MeDIa!",
                                               "Failed to load " + self.mp.media().canonicalUrl().toString())
                self.mp.stop()
                self.showSlider.setValue(0)
                self.showSlider.blockSignals(False)
                self.showSlider.setEnabled(False)
                self.playButton.setEnabled(False)
                self.pauseButton.setEnabled(False)
                self.stopButton.setEnabled(False)
                self.leftButton.setEnabled(False)
                self.rightButton.setEnabled(False)
                self.image_no_label.hide()
                self.image_yes_label.hide()

                print(self.playlist.media())

    def mp_on_state_change(self, state):
        if state == QtMultimedia.QMediaPlayer.StoppedState:
            self.filename_label.setText(self.playlist.currentMedia().canonicalUrl().fileName()[:59] + "...")
            self.showSlider.blockSignals(False)
            if self.audio_player:
                self.image_yes_label.hide()
                self.image_no_label.show()
            self.pauseButton.hide()
            self.playButton.show()
            self.playButton.setEnabled(True)
            self.pauseButton.setEnabled(False)
            self.stopButton.setEnabled(False)
            self.showSlider.setEnabled(True)
            self.showSlider.setValue(0)
        elif state == QtMultimedia.QMediaPlayer.PlayingState:
            self.filename_label.setText(self.playlist.currentMedia().canonicalUrl().fileName()[:59] + "...")
            self.showSlider.blockSignals(True)
            if self.audio_player:
                self.image_no_label.hide()
                self.image_yes_label.show()
            self.playButton.setEnabled(False)
            self.pauseButton.setEnabled(True)
            self.stopButton.setEnabled(True)
            self.showSlider.setEnabled(False)
        elif state == QtMultimedia.QMediaPlayer.PausedState:
            self.filename_label.setText(self.playlist.currentMedia().canonicalUrl().fileName()[:59] + "...")
            self.showSlider.blockSignals(False)
            if self.audio_player:
                self.image_yes_label.hide()
                self.image_no_label.show()
            self.playButton.setEnabled(True)
            self.pauseButton.setEnabled(False)
            self.stopButton.setEnabled(True)
            self.showSlider.setEnabled(True)

    def videoplayer(self):
        self.recordingButton.hide()
        self.audio_player = False
        self.openButton.setText(" Open video file...")
        self.not_secretButton.hide()
        self.spacerItem.changeSize(0, 0)
        Form.setMaximumSize(16777215, 16777215)

    def b(self):
        global bbb
        result = QtWidgets.QMessageBox.information(Form, "Nothing", "Nothing happened",
                                                   QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.No | QtWidgets.QMessageBox.Close)
        if result == QtWidgets.QMessageBox.No:
            bbb = True
            Form.close()
        self.not_secretButton.hide()

    def audioplayer(self):
        self.recordingButton.show()
        self.audio_player = True
        self.openButton.setText(" Open audio file...")
        self.not_secretButton.show()
        self.spacerItem.changeSize(40, 20)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "FWPlayer"))
        self.openButton.setText(_translate("Form", " Open audio file..."))
        self.recordingButton.setText(_translate("Form", " Select recording file..."))
        self.filename_label.setText(_translate("Form", "Filename"))
        self.leftButton.setText(_translate("Form", "..."))
        self.playButton.setText(_translate("Form", "Play"))
        self.pauseButton.setText(_translate("Form", "Pause"))
        self.stopButton.setText(_translate("Form", "Stop"))
        self.rightButton.setText(_translate("Form", "..."))
        self.volume_label.setText(_translate("Form", "Volume"))

        self.open_file_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Ctrl+O"), Form)
        self.open_file_sh.activated.connect(self.openButton.click)

        self.stop_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Ctrl+S"), Form)
        self.stop_sh.activated.connect(self.stopButton.click)

        self.mute_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Ctrl+M"), Form)
        self.mute_sh.activated.connect(self.muteButton.click)

        self.video_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Ctrl+V"), Form)
        self.video_sh.activated.connect(self.videoButton.click)
        self.audio_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Ctrl+A"), Form)
        self.audio_sh.activated.connect(self.audioButton.click)

        self.left_sh = QtWidgets.QShortcut(QtGui.QKeySequence("A"), Form)
        self.left_sh.activated.connect(self.leftButton.click)
        self.right_sh = QtWidgets.QShortcut(QtGui.QKeySequence("D"), Form)
        self.right_sh.activated.connect(self.rightButton.click)

        self.show_left_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Left"), Form)
        self.show_left_sh.activated.connect(self.show_slider(1))
        self.show_right_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Right"), Form)
        self.show_right_sh.activated.connect(self.show_slider(2))

        self.play_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Enter"), Form)
        self.play_sh.activated.connect(self.play_pause_sh)
        self.play_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Return"), Form)
        self.play_sh.activated.connect(self.play_pause_sh)
        self.play_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Space"), Form)
        self.play_sh.activated.connect(self.play_pause_sh)

        self.listButton_sh = QtWidgets.QShortcut(QtGui.QKeySequence("="), Form)
        self.listButton_sh.activated.connect(self.listButton.click)

        self.listW_sh = QtWidgets.QShortcut(QtGui.QKeySequence("L"), Form)
        self.listW_sh.activated.connect(self.listWidget.setFocus)

        self.quit_sh = QtWidgets.QShortcut(QtGui.QKeySequence("Ctrl+Q"), Form)
        self.quit_sh.activated.connect(Form.close)

    def play_pause_sh(self):
        if self.playButton.isEnabled():
            self.playButton.click()
        elif not self.playButton.isEnabled():
            self.pauseButton.click()

    def show_slider(self, n):
        def inner():
            if not self.playlist.isEmpty():
                if n == 1:
                    self.mp.setPosition(self.showSlider.sliderPosition() - 600)
                if n == 2:
                    self.mp.setPosition(self.showSlider.sliderPosition() + 600)

        return inner


clicks = 0
value_error = 7
yes = False


class Ui_Form_2(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setWindowModality(QtCore.Qt.ApplicationModal)
        Form.resize(796, 447)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(15)
        Form.setFont(font)
        Form.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textEdit = QtWidgets.QTextEdit(Form)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.textEdit.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(20)
        self.textEdit.setFont(font)
        self.textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit.setReadOnly(True)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout.addWidget(self.textEdit)
        self.pushButton = QtWidgets.QPushButton(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.pushButton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        Form.setWindowFlags(
            QtCore.Qt.Window |
            QtCore.Qt.CustomizeWindowHint |
            QtCore.Qt.WindowTitleHint |
            QtCore.Qt.WindowCloseButtonHint |
            QtCore.Qt.WindowStaysOnTopHint
        )

        self.pushButton.clicked.connect(self.kostli)

    def kostli(self):
        global yes
        self.textEdit.setText('Co Co Coca Co Co Commands Co Co Cola 2023 year since the birth of Jesus')
        self.textEdit.append('\n \n  .tnemnorivne evitcaretni na ni noitamrofni IMW fo tuptuO - CIMW \n \n .seert yrotcerid dna selif gniypoC - YPOCX\n \n.ksid eht rof emulov eht fo rebmun laires dna lebal eht syalpsiD - LOV')
        self.textEdit.append('\n \n.ksid ot selif gnitirw fo ssentcerroc eht gnikcehc rof edom eht gnitteS - YFIREV\n \n .noisrev swodniW eht tuoba noitamrofni syalpsiD - REV')
        self.textEdit.append('\n \n .emit metsys eht fo gnittes dna tuptuO - EMIT\n \n.noitacilppa ro ssecorp a gnippots ro gnitanimreT - LLIKKSAT\n\n.secivres gnidulcni ,sksat gninnur lla syalpsiD - TSILKSAT')
        self.textEdit.append('\n \n .seert yrotcerid dna selif gniypoc rof loot devorpmi na si YPOCOBOR\n\n.redlof a gniteleD - RIDMR\n\n.selif secalpeR - ECALPER\n\n.sredlof ro selif semaneR - EMANER\n\n.sredlof ro selif semaneR - NER')
        self.textEdit.append('\n \n .setubirtta elif gnignahc dna gniyalpsiD - BIRTTA\n\n.snoisnetxe eman el_if yb sgnippam fo egnahc ro tuptuO - COSSA')
        self.textEdit.append('\n \n Successfuly!!! \n \n')
        yes = True

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "cmd"))
        self.textEdit.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                                 "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                                 "p, li { white-space: pre-wrap; }\n"
                                                 "</style></head><body style=\" font-family:\'Consolas\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
                                                 "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.pushButton.setText(_translate("Form", "Click to raise W.ru"))


class Ui_Form_3(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(92, 37)
        Form.setMinimumSize(QtCore.QSize(92, 37))
        Form.setMaximumSize(QtCore.QSize(92, 37))
        Form.setWindowFlags(QtCore.Qt.WindowTitleHint | QtCore.Qt.WindowCloseButtonHint)
        font = QtGui.QFont()
        font.setPointSize(8)
        Form.setFont(font)
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(-20, -70, 131, 171))
        font = QtGui.QFont()
        font.setPointSize(25)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        self.pushButton.clicked.connect(self.message)
        self.pushButton.clicked.connect(Form.close)

    def message(self):
        QtWidgets.QMessageBox.information(MainWindow, ":)", "Have a nice day!!!\nI am kind :)\nI am up-to-date electricity\nThanks! (:")

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", ":/?"))
        self.pushButton.setText(_translate("Form", ":/"))


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(271, 345)
        MainWindow.setMinimumSize(QtCore.QSize(271, 345))
        MainWindow.setMaximumSize(QtCore.QSize(271, 345))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 144, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(174, 81, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 12, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(199, 136, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 144, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(174, 81, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 12, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(199, 136, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 144, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(174, 81, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 12, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        MainWindow.setPalette(palette)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./apple-touch-icon-180x180.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(271, 304))
        self.centralwidget.setMaximumSize(QtCore.QSize(271, 304))
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(0, 200, 271, 101))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.spinBox = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox.setGeometry(QtCore.QRect(0, 1, 271, 191))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 144, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(174, 81, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 12, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(199, 136, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 144, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(174, 81, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 12, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(199, 136, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 144, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(174, 81, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(96, 12, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 9, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.spinBox.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(50)
        self.spinBox.setFont(font)
        self.spinBox.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBox.setReadOnly(True)
        self.spinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox.setMaximum(9999999)
        self.spinBox.setObjectName("spinBox")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(0, 170, 271, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 18, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.progressBar.setPalette(palette)
        self.progressBar.setStyleSheet("border-color: rgb(144, 18, 254);")
        self.progressBar.setMaximum(35)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setTextVisible(False)
        self.progressBar.setObjectName("progressBar")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 271, 21))
        self.menubar.setObjectName("menubar")
        self.menuFiLE = QtWidgets.QMenu(self.menubar)
        self.menuFiLE.setObjectName("menuFiLE")
        self.menuRECORDS = QtWidgets.QMenu(self.menubar)
        self.menuRECORDS.setObjectName("menuRECORDS")
        self.menuHElP = QtWidgets.QMenu(self.menubar)
        self.menuHElP.setObjectName("menuHElP")
        self.menuAbOUT = QtWidgets.QMenu(self.menubar)
        self.menuAbOUT.setObjectName("menuAbOUT")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionabout = QtWidgets.QAction(MainWindow)
        self.actionabout.setObjectName("actionabout")
        self.actionaBout = QtWidgets.QAction(MainWindow)
        self.actionaBout.setObjectName("actionaBout")
        self.actionabOut = QtWidgets.QAction(MainWindow)
        self.actionabOut.setObjectName("actionabOut")
        self.actionabooUt = QtWidgets.QAction(MainWindow)
        self.actionabooUt.setObjectName("actionabooUt")
        self.actionabouT = QtWidgets.QAction(MainWindow)
        self.actionabouT.setObjectName("actionabouT")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.action0 = QtWidgets.QAction(MainWindow)
        self.action0.setObjectName("action0")
        self.actionClEAR = QtWidgets.QAction(MainWindow)
        self.actionClEAR.setObjectName("actionClEAR")
        self.menuFiLE.addAction(self.actionQuit)
        self.menuRECORDS.addAction(self.action0)
        self.menuRECORDS.addAction(self.actionClEAR)
        self.menuAbOUT.addAction(self.actionabout)
        self.menuAbOUT.addAction(self.actionaBout)
        self.menuAbOUT.addAction(self.actionabOut)
        self.menuAbOUT.addAction(self.actionabooUt)
        self.menuAbOUT.addAction(self.actionabouT)
        self.menuAbOUT.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFiLE.menuAction())
        self.menubar.addAction(self.menuRECORDS.menuAction())
        self.menubar.addAction(self.menuHElP.menuAction())
        self.menubar.addAction(self.menuAbOUT.menuAction())

        self.retranslateUi(MainWindow)
        self.pushButton.clicked.connect(self.spinBox.stepUp)  # type: ignore
        self.actionQuit.triggered.connect(MainWindow.close)  # type: ignore
        self.spinBox.valueChanged['int'].connect(self.progressBar.setValue)  # type: ignore
        self.actionClEAR.triggered.connect(self.spinBox.stepDown)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.progressBar.valueChanged.connect(self.clsoe_clicsk)
        self.spinBox.valueChanged.connect(self.end)

    def el(self):
        result = QtWidgets.QMessageBox.information(Form, "ThE QuAlIty oF mODeRn ElEcTrIcIty", "The server went down without electricity!!!",
                                                   QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.No | QtWidgets.QMessageBox.Close)
        if result == QtWidgets.QMessageBox.No:
            return
        MainWindow.close()

    def end(self):
        if self.spinBox.value() == 39:
            QtWidgets.QMessageBox.critical(MainWindow, ':?  :&  :?', 'Electricity? Yes!')
            MainWindow.close()

    def clsoe_clicsk(self):
        global value_error
        if self.progressBar.value() == 1:
            self.el()
        if self.progressBar.value() == value_error:
            self.el()
            value_error += 20
            result = QtWidgets.QMessageBox.critical(MainWindow, 'Oh...', 'Server lёg, go in consol(as)',
                                                    QtWidgets.QMessageBox.Open | QtWidgets.QMessageBox.No)
            if result == QtWidgets.QMessageBox.No:
                MainWindow.close()
            elif result == QtWidgets.QMessageBox.Open:
                self.cmd_0()

    def cmd_0(self):
        global yes
        Form_3 = QtWidgets.QDialog()
        ui_3 = Ui_Form_2()
        ui_3.setupUi(Form_3)
        Form_3.show()
        Form_3.exec()

        if yes:
            QtWidgets.QMessageBox.information(MainWindow, 'ypa', 'Webinar.ru is alive(for now))))')
            yes = False
        elif not yes:
            MainWindow.close()

    def smile(self):
        Form_2 = QtWidgets.QDialog()
        ui3 = Ui_Form_3()
        ui3.setupUi(Form_2)
        Form_2.move(QtCore.QPoint(0, 0))
        Form_2.show()
        Form_2.exec()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Webinar.ru"))
        self.pushButton.setText(_translate("MainWindow", "ОДОбРИТЬ"))
        self.menuFiLE.setTitle(_translate("MainWindow", "FiLE"))
        self.menuRECORDS.setTitle(_translate("MainWindow", "RECORDS"))
        self.menuHElP.setTitle(_translate("MainWindow", "HElP"))
        self.menuAbOUT.setTitle(_translate("MainWindow", "AbOUT"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionabout.setText(_translate("MainWindow", "about"))
        self.actionaBout.setText(_translate("MainWindow", "aBout"))
        self.actionabOut.setText(_translate("MainWindow", "abOut"))
        self.actionabooUt.setText(_translate("MainWindow", "abooUt"))
        self.actionabouT.setText(_translate("MainWindow", "abouT"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.action0.setText(_translate("MainWindow", "0"))
        self.actionClEAR.setText(_translate("MainWindow", "ClEAR"))
        self.actionClEAR.setShortcut(_translate("MainWindow", "Ctrl+C"))


if __name__ == "__main__":
    app = QtWidgets.QApplication([])

    Form = QtWidgets.QWidget()

    ui = Ui_Form()
    ui.setupUi(Form)

    Form.show()
    Form.showNormal()

    app.exec()
    if bbb:
        app_2 = QtWidgets.QApplication([])

        MainWindow = QtWidgets.QMainWindow()

        ui_2 = Ui_MainWindow()
        ui_2.setupUi(MainWindow)

        MainWindow.show()

        app_2.exec()
